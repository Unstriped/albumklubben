{"version":3,"sources":["services/AlbumService/index.js","util/index.js","services/GoogleDriveService/index.js","providers/AlbumContext.js","components/WeekNumber/index.js","components/Backdrop/index.js","components/AlbumInfo/index.js","components/Loader/index.js","App.js","serviceWorker.js","index.js"],"names":["buildParams","method","album","artist","autoCorrect","arguments","length","undefined","concat","findYearInTags","tags","filter","tag","test","name","convertToAlbum","_ref","url","image","tracks","urls","type","year","getAlbumByNameAndArtist","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","body","wrap","_context2","prev","next","Error","abrupt","fetch","then","_ref3","_callee","res","response","_context","ok","json","sent","stop","_x3","apply","this","_x","_x2","getWeek","date","Date","setHours","setDate","getDate","getDay","week1","getFullYear","Math","round","getTime","convertSpreadSheetToWeekInfo","spreadSheet","feed","entry","gsx$week","$t","map","week","Number","parseInt","gsx$album","gsx$artist","spotifyUrl","gsx$spotify","getInfoForWeek","weekNum","weeks","find","AlbumContext","React","createContext","AlbumProvider","_Component","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","resourcesToLoad","resourcesLoaded","weekNumber","albumData","inherits","createClass","key","value","_componentDidMount","weekInfo","_this2","updateLoadingProgress","console","log","push","setState","Preload","onSingleImageComplete","children","react_default","createElement","Provider","loadingProgress","Component","WeekNumber","useContext","style","position","top","left","width","height","backgroundColor","display","flexDirection","justifyContent","textAlign","Backdrop","className","backgroundImage","ExternalLink","href","AlbumInfo_LinkIcon","getLinkText","LinkIcon","AlbumInfo_SpotifyIcon","AlbumInfo_LastFMIcon","SpotifyIcon","xmlns","fillRule","clipRule","fill","d","LastFMIcon","viewBox","AlbumInfo","alt","src","AlbumInfo_ExternalLink","Progress","percent","Loader","Loader_Progress","App","AlbumContext_AlbumProvider","components_Backdrop","components_WeekNumber","components_AlbumInfo","components_Loader","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eafec7fc.chunk.js","sourcesContent":["// Please don't use this :(\nconst PUBLIC_KEY = \"2729fff6586466b0db95b377fc7597c3\";\nconst BASE_URL = \"https://ws.audioscrobbler.com/2.0/\";\n\nconst buildParams = (method, album, artist, autoCorrect = 1) =>\n  `?method=${method}&album=${album}&artist=${artist}&autocorrect=${autoCorrect}&api_key=${PUBLIC_KEY}&format=json`;\n\nconst findYearInTags = tags => {\n  const matchingTags = tags.filter(\n    tag => /^\\d+$/.test(tag.name) && tag.name.length === 4\n  );\n  return matchingTags[0].name;\n};\n\nconst convertToAlbum = ({ name, artist, url, image, tracks, tags }) => ({\n  name,\n  artist,\n  urls: [{ type: \"lastfm\", url }],\n  tracks,\n  year: findYearInTags(tags.tag),\n  image: image.length > 0 ? image[image.length - 1][\"#text\"] : null\n});\n\nconst getAlbumByNameAndArtist = async (album, artist) => {\n  if (!album || !artist)\n    throw new Error(\"Both album and artist needs to be passed\");\n\n  const body = buildParams(\"album.getInfo\", album, artist);\n  return fetch(BASE_URL + body).then(async res => {\n    if (!res.ok) throw new Error(\"Unable to get album data!\");\n    const response = await res.json();\n    return convertToAlbum(response.album);\n  });\n};\n\nexport { getAlbumByNameAndArtist };\n","const getWeek = (date = new Date()) => {\n  // Reset hours to prevent funky behaviour\n  date.setHours(0, 0, 0, 0);\n  // Thursday in current week decides the year.\n  date.setDate(date.getDate() + 3 - ((date.getDay() + 6) % 7));\n  // January 4 is always in week 1.\n  var week1 = new Date(date.getFullYear(), 0, 4);\n  // Adjust to Thursday in week 1 and count number of weeks from date to week1.\n  return (\n    1 +\n    Math.round(\n      ((date.getTime() - week1.getTime()) / 86400000 -\n        3 +\n        ((week1.getDay() + 6) % 7)) /\n        7\n    )\n  );\n};\n\nexport { getWeek };\n","const SPREADSHEET_URL =\n  \"https://spreadsheets.google.com/feeds/list/1_7q9jusMZAvBBdk4cHoSg-LhjswU76k0XvGv1EC66u0/od6/public/values?alt=json\";\n\nconst getSpreadSheet = () =>\n  fetch(SPREADSHEET_URL).then(async res => {\n    if (!res.ok) throw new Error(\"Unable to get google spreadsheet!\");\n    const response = await res.json();\n    return response;\n  });\n\nconst convertSpreadSheetToWeekInfo = spreadSheet => {\n  const weekEntries = spreadSheet.feed.entry.filter(entry => entry.gsx$week.$t);\n  return weekEntries.map(entry => ({\n    week: Number.parseInt(entry.gsx$week.$t),\n    album: entry.gsx$album.$t,\n    artist: entry.gsx$artist.$t,\n    spotifyUrl: entry.gsx$spotify.$t\n  }));\n};\n\nconst getInfoForWeek = async weekNum => {\n  const spreadSheet = await getSpreadSheet();\n  const weeks = convertSpreadSheetToWeekInfo(spreadSheet);\n  return weeks.find(week => week.week === weekNum);\n};\n\nexport { getInfoForWeek };\n","import React, { Component } from \"react\";\nimport Preload from \"image-preload\";\nimport { getAlbumByNameAndArtist } from \"../services/AlbumService\";\nimport { getWeek } from \"../util\";\nimport { getInfoForWeek } from \"../services/GoogleDriveService\";\n\nconst AlbumContext = React.createContext();\n\nexport class AlbumProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      resourcesToLoad: 3,\n      resourcesLoaded: 0,\n      weekNumber: getWeek(),\n      albumData: null\n    };\n  }\n\n  async componentDidMount() {\n    const weekInfo = await getInfoForWeek(this.state.weekNumber);\n    this.updateLoadingProgress();\n    console.log(weekInfo);\n\n    const albumData = await getAlbumByNameAndArtist(\n      weekInfo.album,\n      weekInfo.artist\n    );\n\n    albumData.urls.push({ type: \"spotify\", url: weekInfo.spotifyUrl });\n    this.setState(\n      {\n        albumData,\n        resourcesLoaded: this.state.resourcesLoaded + 1\n      },\n      () => {\n        Preload([albumData.image], {\n          onSingleImageComplete: () => {\n            this.updateLoadingProgress();\n          }\n        });\n      }\n    );\n  }\n\n  updateLoadingProgress() {\n    this.setState({\n      resourcesLoaded: this.state.resourcesLoaded + 1\n    });\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <AlbumContext.Provider\n        value={{\n          weekNumber: this.state.weekNumber,\n          albumData: this.state.albumData,\n          loadingProgress:\n            this.state.resourcesLoaded / this.state.resourcesToLoad\n        }}\n      >\n        {children}\n      </AlbumContext.Provider>\n    );\n  }\n}\n\nexport default AlbumContext;\n","import React, { useContext } from \"react\";\nimport AlbumContext from \"../../providers/AlbumContext\";\n\nconst WeekNumber = () => {\n  const { weekNumber } = useContext(AlbumContext);\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"3rem\",\n        height: \"3rem\",\n        backgroundColor: \"yellow\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        textAlign: \"center\"\n      }}\n    >\n      {weekNumber}\n    </div>\n  );\n};\n\nexport default WeekNumber;\n","import React, { useContext } from \"react\";\nimport AlbumContext from \"../../providers/AlbumContext\";\nimport \"./style.css\";\n\nconst Backdrop = () => {\n  const { albumData } = useContext(AlbumContext);\n  if (!albumData) return null;\n\n  return (\n    <div\n      className=\"backdrop\"\n      style={{\n        backgroundImage: `url(\"${albumData.image}\")`\n      }}\n    />\n  );\n};\n\nexport default Backdrop;\n","import React, { useContext } from \"react\";\nimport AlbumContext from \"../../providers/AlbumContext\";\nimport \"./style.css\";\n\nconst AlbumInfo = () => {\n  const { albumData } = useContext(AlbumContext);\n  if (!albumData) return null;\n\n  return (\n    <main className=\"album-info\">\n      <div className=\"album-info--cover\">\n        <img alt=\"album cover\" src={albumData.image} />\n      </div>\n      <div className=\"album-info--meta\">\n        <h1 className=\"heading\">{albumData.name}</h1>\n        <p className=\"subheading\">\n          {albumData.artist} <span className=\"year\">{albumData.year}</span>\n        </p>\n        {albumData.urls.map(({ type, url }) => (\n          <ExternalLink key={type} type={type} url={url} />\n        ))}\n      </div>\n    </main>\n  );\n};\n\nconst ExternalLink = ({ type, url }) => (\n  <a className=\"external-action\" href={url}>\n    <LinkIcon type={type} />\n    {getLinkText(type)}\n  </a>\n);\n\nconst LinkIcon = ({ type }) => {\n  switch (type) {\n    case \"spotify\":\n      return <SpotifyIcon />;\n    case \"lastfm\":\n      return <LastFMIcon />;\n    default:\n      return null;\n  }\n};\n\nconst SpotifyIcon = () => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fillRule=\"evenodd\"\n    clipRule=\"evenodd\"\n  >\n    <path\n      fill=\"#1DB954\"\n      d=\"M19.098 10.638c-3.868-2.297-10.248-2.508-13.941-1.387-.593.18-1.22-.155-1.399-.748-.18-.593.154-1.22.748-1.4 4.239-1.287 11.285-1.038 15.738 1.605.533.317.708 1.005.392 1.538-.316.533-1.005.709-1.538.392zm-.126 3.403c-.272.44-.847.578-1.287.308-3.225-1.982-8.142-2.557-11.958-1.399-.494.15-1.017-.129-1.167-.623-.149-.495.13-1.016.624-1.167 4.358-1.322 9.776-.682 13.48 1.595.44.27.578.847.308 1.286zm-1.469 3.267c-.215.354-.676.465-1.028.249-2.818-1.722-6.365-2.111-10.542-1.157-.402.092-.803-.16-.895-.562-.092-.403.159-.804.562-.896 4.571-1.045 8.492-.595 11.655 1.338.353.215.464.676.248 1.028zm-5.503-17.308c-6.627 0-12 5.373-12 12 0 6.628 5.373 12 12 12 6.628 0 12-5.372 12-12 0-6.627-5.372-12-12-12z\"\n    />\n  </svg>\n);\n\nconst LastFMIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path\n      fill=\"#D41E08\"\n      d=\"M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm3.664 15.889c-2.773 0-3.736-1.25-4.248-2.806l-.515-1.604c-.385-1.17-.834-2.084-2.244-2.084-.979 0-1.974.706-1.974 2.678 0 1.539.786 2.502 1.894 2.502 1.249 0 2.083-.931 2.083-.931l.515 1.396s-.866.85-2.679.85c-2.245-.001-3.496-1.316-3.496-3.754 0-2.534 1.251-4.025 3.607-4.025 2.133 0 3.208.77 3.881 2.854l.53 1.604c.385 1.171 1.058 2.021 2.678 2.021 1.091 0 1.668-.24 1.668-.834 0-.465-.273-.802-1.09-.994l-1.091-.256c-1.331-.321-1.861-1.01-1.861-2.101 0-1.748 1.412-2.293 2.854-2.293 1.638 0 2.63.593 2.759 2.037l-1.604.192c-.063-.69-.48-.979-1.251-.979-.706 0-1.138.321-1.138.866 0 .481.208.77.914.93l1.025.225c1.381.321 2.119.994 2.119 2.293 0 1.603-1.347 2.213-3.336 2.213z\"\n    />\n  </svg>\n);\n\nconst getLinkText = type => {\n  switch (type) {\n    case \"spotify\":\n      return \"Listen on Spotify\";\n    case \"lastfm\":\n      return \"LastFm\";\n    default:\n      return null;\n  }\n};\n\nexport default AlbumInfo;\n","import React, { useContext } from \"react\";\nimport AlbumContext from \"../../providers/AlbumContext\";\nimport \"./style.css\";\n\nconst Loader = () => {\n  const { loadingProgress } = useContext(AlbumContext);\n  if (loadingProgress === 1) return null;\n\n  return (\n    <div className=\"loading-cover\">\n      <Progress percent={loadingProgress} />\n    </div>\n  );\n};\n\nconst Progress = ({ percent }) => (\n  <div className=\"progress\">\n    <div className=\"progress--bar\" style={{ width: `${percent * 100}%` }} />\n  </div>\n);\n\nexport default Loader;\n","import React from \"react\";\nimport { AlbumProvider } from \"./providers/AlbumContext\";\nimport WeekNumber from \"./components/WeekNumber\";\nimport Backdrop from \"./components/Backdrop\";\nimport AlbumInfo from \"./components/AlbumInfo\";\nimport Loader from \"./components/Loader\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <AlbumProvider>\n      <Backdrop />\n      <div className=\"wrapper\">\n        <WeekNumber />\n        <AlbumInfo />\n        <Loader />\n      </div>\n    </AlbumProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}